generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Busqueda {
  id             Int      @id @default(autoincrement())
  criterio       String
  fecha_creacion DateTime @default(now())
  id_usuario     Int
  Usuario        Usuario  @relation(fields: [id_usuario], references: [id])
}

model Calificacion {
  id             Int     @id @default(autoincrement())
  id_usuario_rol Int
  calf_carro     Int?
  calf_usuario   Int?
  id_carro       Int
  id_usuario     Int
  Carro          Carro   @relation(fields: [id_carro], references: [id])
  Usuario        Usuario @relation(fields: [id_usuario], references: [id])
}

model CarasteristicasAdicionales {
  id                              Int                               @id @default(autoincrement())
  nombre                          String
  caracteristicasAdicionalesCarro caracteristicasAdicionalesCarro[]
}

model Carro {
  id                              Int                               @id @default(autoincrement())
  vim                             String
  a_o                             Int                               @map("año")
  marca                           String
  modelo                          String
  placa                           String
  id_direccion                    Int
  asientos                        Int
  puertas                         Int
  soat                            Boolean
  precio_por_dia                  Float
  num_mantenimientos              Int
  transmicion                     String
  estado                          String
  id_usuario_rol                  Int
  descripcion                     String?
  NumeroViajes                    Int?                              @default(0)
  ingresoTotal                    Float?                            @default(0)
  id_tipodeDescuento              Int?
  fecha_ingreso                   DateTime?                         @default(now())
  disponible_desde                DateTime?
  disponible_hasta                DateTime?
  Calificacion                    Calificacion[]
  Direccion                       Direccion                         @relation(fields: [id_direccion], references: [id])
  tipodeDescuento                 tipodeDescuento?                  @relation(fields: [id_tipodeDescuento], references: [id])
  Usuario                         Usuario                           @relation(fields: [id_usuario_rol], references: [id])
  CombustibleCarro                CombustibleCarro[]
  Favorito                        Favorito[]
  Imagen                          Imagen[]
  Reserva                         Reserva[]
  SeguroCarro                     SeguroCarro[]
  caracteristicasAdicionalesCarro caracteristicasAdicionalesCarro[]
  contratodeAlquiler              contratodeAlquiler[]
}

model Ciudad {
  id         Int          @id @default(autoincrement())
  nombre     String
  id_pais    Int?
  Pais       Pais?        @relation(fields: [id_pais], references: [id])
  Provincia  Provincia[]
  Usuario    Usuario[]
  aeropuerto aeropuerto[]
}

model CombustibleCarro {
  id              Int             @id @default(autoincrement())
  id_carro        Int
  id_combustible  Int
  Carro           Carro           @relation(fields: [id_carro], references: [id])
  TipoCombustible TipoCombustible @relation(fields: [id_combustible], references: [id])
}

model Descuento {
  id               Int              @id @default(autoincrement())
  id_descuentoTipo Int?
  montoDescontado  Float?
  tipodeDescuento  tipodeDescuento? @relation(fields: [id_descuentoTipo], references: [id])
  Reserva          Reserva[]        @relation("DescuentoToReserva")
}

model Direccion {
  id           Int         @id @default(autoincrement())
  id_provincia Int
  num_casa     String?
  calle        String
  zona         String?
  latitud      Float?
  longitud     Float?
  Carro        Carro[]
  Provincia    Provincia   @relation(fields: [id_provincia], references: [id])
  Ubicacion    Ubicacion[]
}

model Favorito {
  id             Int        @id @default(autoincrement())
  id_usuario_rol Int
  id_carro       Int
  id_usuario     Int?
  Carro          Carro      @relation(fields: [id_carro], references: [id])
  Usuario        Usuario?   @relation(fields: [id_usuario], references: [id])
  UsuarioRol     UsuarioRol @relation(fields: [id_usuario_rol], references: [id])
}

model Garantia {
  id           Int      @id @default(autoincrement())
  precio       Float
  fecha_limite DateTime
  pagado       Boolean
  descripcion  String?
  id_reserva   Int?
  pagoPorDa_os Boolean? @map("pagoPorDaños")
  Reserva      Reserva? @relation(fields: [id_reserva], references: [id])
}

model Imagen {
  id        Int     @id @default(autoincrement())
  id_carro  Int
  data      String?
  format    String?
  height    Int?
  public_id String?
  width     Int?
  Carro     Carro   @relation(fields: [id_carro], references: [id])
}

model Notificacion {
  id             Int     @id @default(autoincrement())
  id_usuario_rol Int
  mensaje        String
  Usuario        Usuario @relation(fields: [id_usuario_rol], references: [id])
}

model Pais {
  id     Int      @id @default(autoincrement())
  nombre String
  Ciudad Ciudad[]
}

model PasswordRecoveryCode {
  id         Int      @id @default(autoincrement())
  id_usuario Int
  correo     String
  codigo     String
  created_at DateTime @default(now())
  expires_at DateTime
  used       Boolean  @default(false)
  Usuario    Usuario  @relation(fields: [id_usuario], references: [id])
}

model Provincia {
  id        Int         @id @default(autoincrement())
  nombre    String
  id_ciudad Int
  Direccion Direccion[]
  Ciudad    Ciudad      @relation(fields: [id_ciudad], references: [id])
}

model Reserva {
  id                     Int         @id @default(autoincrement())
  id_carro               Int
  id_usuario             Int
  estado                 String      @default("pendiente")
  fecha_creacion         DateTime    @default(now())
  fecha_expiracion       DateTime?
  fecha_fin              DateTime?
  fecha_inicio           DateTime
  hora_fin               Int?
  hora_inicio            Int?
  kilometraje            Int?
  montoPagoInicial       Float?
  montoTotalConDescuento Float?
  Garantia               Garantia[]
  Carro                  Carro       @relation(fields: [id_carro], references: [id])
  Usuario                Usuario     @relation(fields: [id_usuario], references: [id])
  Descuento              Descuento[] @relation("DescuentoToReserva")
}

model Rol {
  id         Int          @id @default(autoincrement())
  rol        String
  UsuarioRol UsuarioRol[]
}

model Seguro {
  id          Int           @id @default(autoincrement())
  empresa     String
  nombre      String
  tipoSeguro  String
  SeguroCarro SeguroCarro[]
}

model SeguroCarro {
  id          Int      @id @default(autoincrement())
  fechaInicio DateTime
  fechaFin    DateTime
  id_carro    Int
  id_seguro   Int
  Carro       Carro    @relation(fields: [id_carro], references: [id])
  Seguro      Seguro   @relation(fields: [id_seguro], references: [id])
}

model TipoCombustible {
  id                Int                @id @default(autoincrement())
  tipoDeCombustible String
  id_carro          Int
  CombustibleCarro  CombustibleCarro[]
}

model Ubicacion {
  id              Int       @id @default(autoincrement())
  id_direccion    Int
  coordenadas     Json
  radio_cobertura Int       @default(5000)
  Direccion       Direccion @relation(fields: [id_direccion], references: [id])
}

model Usuario {
  id                   Int                    @id @default(autoincrement())
  nombre               String
  fecha_nacimiento     DateTime?
  id_ciudad            Int?
  contrase_a           String?                @map("contraseña")
  telefono             String?
  foto                 String?
  google_id            String?
  correo               String                 @unique
  genero               Genero?
  Busqueda             Busqueda[]
  Calificacion         Calificacion[]
  Carro                Carro[]
  Favorito             Favorito[]
  Notificacion         Notificacion[]
  PasswordRecoveryCode PasswordRecoveryCode[]
  Reserva              Reserva[]
  Ciudad               Ciudad?                @relation(fields: [id_ciudad], references: [id])
  UsuarioRol           UsuarioRol[]
}

model UsuarioRol {
  id         Int        @id @default(autoincrement())
  id_rol     Int
  id_usuario Int
  Favorito   Favorito[]
  Rol        Rol        @relation(fields: [id_rol], references: [id])
  Usuario    Usuario    @relation(fields: [id_usuario], references: [id])
}

model aeropuerto {
  id        Int    @id @default(autoincrement())
  nombre    String
  latitud   Float?
  longitud  Float?
  id_ciudad Int
  Ciudad    Ciudad @relation(fields: [id_ciudad], references: [id])
}

model caracteristicasAdicionalesCarro {
  id                            Int                        @id @default(autoincrement())
  id_carro                      Int
  id_carasteristicasAdicionales Int
  CarasteristicasAdicionales    CarasteristicasAdicionales @relation(fields: [id_carasteristicasAdicionales], references: [id])
  Carro                         Carro                      @relation(fields: [id_carro], references: [id])
}

model contratodeAlquiler {
  id          Int    @id @default(autoincrement())
  id_reserva  Int
  kilometraje Int
  id_carro    Int
  estado      String @default("pendiente")
  Carro       Carro  @relation(fields: [id_carro], references: [id])
}

model tipodeDescuento {
  id           Int         @id @default(autoincrement())
  nombre       String
  porcentaje   Float
  fecha_inicio DateTime?
  fecha_fin    DateTime?
  Carro        Carro[]
  Descuento    Descuento[]
}

enum Genero {
  MASCULINO
  FEMENINO
  OTRO
}

enum Roles {
  HOST
  RENTER
  DRIVER
}
